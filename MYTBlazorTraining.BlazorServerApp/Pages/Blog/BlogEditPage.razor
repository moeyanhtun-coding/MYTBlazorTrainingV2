@page "/blog/edit/{id:int}"
<h3>BlogEditPage</h3>

@if (_blog is not null)
{
    <div class="row">
        <div class="col-6 offset-3">
            <div class="form-floating mb-3">
                <input type="text" class="form-control" id="blogTitle" placeholder="Blog Title" @bind-value="_blog!.BlogTitle">
                <label for="blogTitle">Blog Title</label>
            </div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control" id="blogAuthor" placeholder="Blog Author" @bind-value="_blog.BlogAuthor">
                <label for="blogAuthor">Blog Author</label>
            </div>
            <div class="form-floating mb-3">
                <input type="text" class="form-control" id="blogContent" placeholder="Blog Content" @bind-value="_blog.BlogContent">
                <label for="blogContent">Blog Content</label>
            </div>
            <a href="/blog" class="btn btn-outline-dark">Back</a>
            <button type="button" class="btn btn-primary" @onclick="Update">Update Blog</button>

        </div>
    </div>
}

@code {
    [Parameter]
    public int id { get; set; }
    private BlogModel? _blog;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _blog = await _db.Blogs.FirstOrDefaultAsync(x => x.BlogId == id);
            StateHasChanged();
        }
    }

    private async Task Update()
    {
        await _db.SaveChangesAsync();
        nav.NavigateTo("/blog");
    }
}
